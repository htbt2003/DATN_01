import { BrowserRouter, Routes, Route } from "react-router-dom";
import LayoutSite from './layouts/LayoutSite';
import RouterApp from './router';
import React, { useEffect } from 'react';
import { clearAuth } from './redux/authSlice';
import {jwtDecode} from 'jwt-decode';
import { useDispatch, useSelector } from "react-redux";
const App = () => {
  const dispatch = useDispatch();
  const token = useSelector((state) => state.auth.token);
  var timeToken = "";
  
  useEffect(() => {
    if(token){
      const decodedToken = jwtDecode(token);
      timeToken = decodedToken.exp * 1000;
      const checkTokenExpiration = () => {
        const currentTime = Date.now();
        if (timeToken && currentTime > timeToken) {
          // Token đã hết hạn, đăng xuất người dùng
          dispatch(clearAuth());
        }
      };
      // Kiểm tra thời gian hết hạn mỗi khi ứng dụng hoạt động
      const interval = setInterval(checkTokenExpiration, 1000); // Kiểm tra mỗi giây
      // Dọn dẹp
      return () => clearInterval(interval);
    }
  
  }, [timeToken, dispatch]);

  return (
    <BrowserRouter>
        <Routes>
          <Route path='/' element={<LayoutSite />}>
            {RouterApp.RouterPublic.map(function (router, index) {
              const Page = router.component;
              return <Route key={index} path={router.path} element={<Page />} />
            })}
          </Route>
        </Routes>
      </BrowserRouter>
  );
};

export default App;
